!!! 5
%html
  %head
    %meta{ name: 'viewport', content: 'width=device-width, initial-scale=1' }
    %meta{ name: 'theme-color', content: '#222' }

    %title
      = full_title(yield(:title))
    = stylesheet_link_tag 'application', media: 'all'
    = javascript_include_tag('//errbit.mpugach.net/javascripts/notifier.js',
      type: 'text/javascript', async: true) if Rails.env.production?
    = javascript_include_tag 'application', type: 'text/javascript'
    = csrf_meta_tags
    - if content_for?(:js_and_css)
      = yield(:js_and_css)
    /[if lt IE 9]
      %script{ src: '//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js' }
      %script{ src: '//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js' }
  %body{ class: sidebar_opened? ? 'sidebar-opened' : '' }
    = render 'layouts/header'

    .sidebar
      %ul.sidebar-accordion
        / %li
        /   %input#group-1{ type: :checkbox, name: 'group-1' }
        /   %label.noselect{ for: 'group-1' }
        /     %i.sidebar-icon.fa.fa-2x.fa-camera-retro{ aria: { hidden: :true } }
        /     Group 1
        /     %span.caret

        /   %ul
        /     %li
        /       %input#sub-group-1{ type: :checkbox, name: 'sub-group-1' }
        /       %label.noselect{ for: 'sub-group-1' }
        /         Sub Group 1
        /         %span.caret

        /       %ul
        /         %li
        /           %a
        /             Ololo 1
        /         %li
        /           %a
        /             Ololo 2
        /         %li
        /           %a
        /             Ololo 3

        /     %li
        /       %a
        /         Ololo 4

        - ApplicationHelper::SIDEBAR_MENU.each do |name, opts|
          - if send "show_#{opts[:plural_name]}_menu?"
            %li
              %input{ type: :checkbox, name: name, id: name }
              %label.noselect{ for: name,
                               class: active_class(send("new_#{name}_path"), send("#{opts[:plural_name]}_path")) }
                %i.sidebar-icon.fa.fa-2x{ class: opts[:icon], aria: { hidden: :true } }
                = t("defaults.links.#{opts[:plural_name]}")
                %span.caret

              %ul
                - if current_person.can_act?("#{name}:new")
                  %li
                    - path = send("new_#{name}_path")
                    = link_to t("defaults.links.#{opts[:plural_name]}_add"), path, class: active_class(path)
                - if current_person.can_act?("#{name}:index")
                  %li
                    - path = send("#{opts[:plural_name]}_path")
                    = link_to t("defaults.links.#{opts[:plural_name]}_list"), path, class: active_class(path)

        - if show_journal_link?
          %li
          = link_to journal_path, class: active_class(journal_path) do
            %i.sidebar-icon.fa.fa-2x.fa-history{ aria: { hidden: :true } }
            = t('defaults.links.journal')

        %li
          = link_to changelog_path, class: active_class(changelog_path) do
            %i.sidebar-icon.fa.fa-2x.fa-road{ aria: { hidden: :true } }
            = t('defaults.links.changelog')
        %li
          = link_to privacy_agreement_path, class: active_class(privacy_agreement_path) do
            %i.sidebar-icon.fa.fa-2x.fa-handshake-o{ aria: { hidden: :true } }
            = t('defaults.links.agreement')

    .container-fluid.main-bar
      - if flash.any?
        .row
          .col-xs-12
            - flash.each do |name, msg|
              .alert.alert-dismissible{ class: "alert-#{name}" }
                = button_tag type: 'button', class: 'close', data: { dismiss: 'alert' } do
                  %span{ aria: { hidden: true } }
                    &times;
                  %span.sr-only
                    Close
                = raw msg

      = yield
